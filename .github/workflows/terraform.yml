name: "Vprofile IAC"

on:
  push:
    branches:
      - main
      - stage
    paths:
      - 'terraform/**'

  pull_request:
    branches:
      - main
      - stage
    paths:
      - 'terraform/**'

env:
  # Credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: ap-southeast-1
  EKS_CLUSTER: vprofile-eks

jobs:
  terraform:
    name: "Apply Terraform code changes"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout source code
        # ใช้ v4 เพื่อให้ได้เวอร์ชันล่าสุดของ major version 4 โดยอัตโนมัติ
        uses: actions/checkout@v4

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        # with:
        #   terraform_version: 1.8.0

      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Terraform format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false -out planfile
        # ให้ workflow ดำเนินการต่อแม้ plan จะล้มเหลว เพื่อไปรัน step ถัดไป
        continue-on-error: true

      - name: Check plan status
        # ตรวจสอบว่า step ก่อนหน้า (id: plan) ล้มเหลวหรือไม่
        if: steps.plan.outcome == 'failure'
        # ถ้าล้มเหลว ให้จบ workflow ด้วย status code 1 (error)
        run: exit 1
